version: "3"


networks:
  drools-network-dev:
    ipam:
      config:
        - subnet: 172.27.1.0/24


services:

  kie-wb:
    image: kie-wb
    container_name: "businessCentral"
    volumes:
      - gitdata:/home/niodir
      - lucenedata:/home/lucene
    hostname: kie-wb.pymma
    links:
      - businessProxyDB:mongodb
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.5
    ports:
      - 8080:8080
      - 8001:8001
    restart: always



  admin-console:
    image: runtime-admin-console
    container_name: "admin-console"
    hostname: admin.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.6
    ports:
      - 8200:8200
    links:
      - businessProxyDB:mongodb
    depends_on:
      - businessProxyDB
    restart: always


  swimmingpool-wb:
    image: swimmingpool-web-ui
    container_name: "swimmingpool-web-ui"
    environment:
      PYMMA_OPTS: " "
    hostname: swimmingpool-wb.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.15
    ports:
      - 12099:12099
    links:
      - runtime-reverse-proxy:reverse-proxy
    depends_on:
      - runtime-reverse-proxy
    restart: always


#-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y
  runtime-proxy-1:
    image: runtime-proxy
    container_name: "runtime-proxy-1"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server1"
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.22
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-2:
    image: runtime-proxy
    container_name: "runtime-proxy-2"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server2"
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.32
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-3:
    image: runtime-proxy
    container_name: "runtime-proxy-3"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server3"
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.42
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-4:
    image: runtime-proxy
    container_name: "runtime-proxy-4"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server4"
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.52
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always

  runtime-proxy-5:
    image: runtime-proxy
    container_name: "runtime-proxy-5"
    volumes:
      - kieserverdir:/niodir-kieserver
    environment:
      PYMMA_OPTS: "-Dorg.kie.server.id=server5"
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.62
    ports:
      - 8090
      - 9080
    links:
      - businessProxyDB:mongodb
      - kie-wb:kie-wb
    depends_on:
      - businessProxyDB
      - kie-wb
    restart: always


  runtime-indexer:
    image: runtime-indexer
    container_name: "runtime-indexer"
    hostname: indexer.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.23
    links:
      - businessProxyDB:mongodb
    depends_on:
      - businessProxyDB
    restart: always

  runtime-reverse-proxy:
    image: runtime-reverse-proxy
    container_name: "runtime-reverse-proxy"
    hostname: reverse-proxy.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.25
    links:
      - businessProxyDB:mongodb
    depends_on:
      - businessProxyDB
    ports:
      - 9500:9500
    restart: always

  businessProxyDB:
    image: mongo
    container_name: "businessProxyDB"
    volumes:
      - mongodb:/data/db
      - mongodb_config:/data/configdb
    hostname: mongo.pymma
    networks:
      drools-network-dev:
        ipv4_address: 172.27.1.3
    ports:
      - 28017:27017
    command: mongod
    restart: always



volumes:
  mongodb:
  mongodb_config:
  gitdata:
  lucenedata:
  kieserverdir: